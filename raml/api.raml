#%RAML 0.8
title: GrAM2
baseUri: https://api.gadz.org/{version}
version: v2

schemas:
  - group_retrive: !include groups/include_group_retrive.schema
  - account_retrive: !include accounts/include_account_retrive.schema

resourceTypes:
  - collection:
      description: Collection of available <<resourcePathName>> in GrAM.
      get:
        description: Get a list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>
      post:
        description: |
          Add a new <<resourcePathName|!singularize>> to GrAM.
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>_create
            example: |
              <<exampleItem>>
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCreateItemResponse>>
  - collection-item:
      description: Entity representing a <<resourcePathName|!singularize>>
      get:
        description: |
          Get the <<resourcePathName|!singularize>>
          with <<resourcePathName|!singularize>>Id =
          {<<resourcePathName|!singularize>>Id}
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleItem>>
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }
      delete:
        description: |
          Delete the <<resourcePathName|!singularize>>
          with <<resourcePathName|!singularize>>Id =
          {<<resourcePathName|!singularize>>Id}
        responses:
          200:
            body:
              application/json:
                example: |
                  { "message": "The <<resourcePathName|!singularize>> {accountID} has been properly deleted" }
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }
      put:
        description: |
          Edit the <<resourcePathName|!singularize>>
          with <<resourcePathName|!singularize>>Id =
          {<<resourcePathName|!singularize>>Id}
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>_edit
            example: |
              <<exampleItem>>
        responses:
          200:
            body:
              application/json:
                example: |
                  { "message": "The <<resourcePathName|!singularize>> has been properly entered" }
          404:
            body:
              application/json:
                example: |
                  {"message": "<<resourcePathName|!singularize>> not found" }
  - readOnlyCollection:
      description: Collection of available <<resourcePathName>> in GrAM.
      get:
        description: Get a list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>


/accounts:
  description: Collection of all accounts
  type:
    collection:
      exampleCollection: !include accounts/include_account_collection.sample
      exampleItem: !include accounts/include_account_create.sample
      exampleCreateItemResponse : !include accounts/include_account_item.sample
  /{soce_id}:
    type:
      collection-item:
        exampleItem: !include accounts/include_account_create.sample
    #/{alias}:
    /groups:
      type:
        readOnlyCollection:
          exampleCollection: !include groups/include_group_collection.sample         
    /roles:
      description: Appplications' roles for this user
      type:
        readOnlyCollection:
          exampleCollection: !include roles/include_role_collection.sample
      
    #/{subscriptions}:
      #description: Services subscribtions
/groups:
  description: Collection of all groups
  type:
    collection:
      exampleCollection: !include groups/include_group_collection.sample
      exampleItem: !include groups/include_group_create.sample
      exampleCreateItemResponse : !include groups/include_group_item.sample
  /{group_short_name}:
    type:
      collection-item:
        exampleItem: !include groups/include_group_create.sample
/roles:
  description: Collection of all appplications' roles
  type:
    collection:
      exampleCollection: !include roles/include_role_collection.sample
      exampleItem: !include roles/include_role_create.sample
      exampleCreateItemResponse : !include roles/include_role_item.sample
  /{name}:
    type:
      collection-item:
        exampleItem: !include roles/include_role_create.sample
    /accounts:
      type:
        readOnlyCollection:
          exampleCollection: !include accounts/include_account_collection.sample
#/services:
  #/{service_name}:

  